<?php

/**
 * BaseReport
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $mobile_id
 * @property integer $wallet_id
 * @property string $name
 * @property string $description
 * @property timestamp $date_from
 * @property timestamp $date_to
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Wallet $Wallet
 * 
 * @method integer   getId()          Returns the current record's "id" value
 * @method integer   getMobileId()    Returns the current record's "mobile_id" value
 * @method integer   getWalletId()    Returns the current record's "wallet_id" value
 * @method string    getName()        Returns the current record's "name" value
 * @method string    getDescription() Returns the current record's "description" value
 * @method timestamp getDateFrom()    Returns the current record's "date_from" value
 * @method timestamp getDateTo()      Returns the current record's "date_to" value
 * @method timestamp getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp getUpdatedAt()   Returns the current record's "updated_at" value
 * @method Wallet    getWallet()      Returns the current record's "Wallet" value
 * @method Report    setId()          Sets the current record's "id" value
 * @method Report    setMobileId()    Sets the current record's "mobile_id" value
 * @method Report    setWalletId()    Sets the current record's "wallet_id" value
 * @method Report    setName()        Sets the current record's "name" value
 * @method Report    setDescription() Sets the current record's "description" value
 * @method Report    setDateFrom()    Sets the current record's "date_from" value
 * @method Report    setDateTo()      Sets the current record's "date_to" value
 * @method Report    setCreatedAt()   Sets the current record's "created_at" value
 * @method Report    setUpdatedAt()   Sets the current record's "updated_at" value
 * @method Report    setWallet()      Sets the current record's "Wallet" value
 * 
 * @package    rutino-server
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReport extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('report');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('mobile_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('wallet_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 4000,
             ));
        $this->hasColumn('date_from', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('date_to', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('updated_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Wallet', array(
             'local' => 'wallet_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}