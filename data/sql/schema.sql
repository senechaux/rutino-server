CREATE TABLE account (id BIGINT AUTO_INCREMENT, global_id VARCHAR(255) NOT NULL, wallet_id BIGINT NOT NULL, account_type_id BIGINT NOT NULL, name VARCHAR(255) NOT NULL, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX wallet_id_idx (wallet_id), INDEX account_type_id_idx (account_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE account_type (id BIGINT AUTO_INCREMENT, global_id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, description TEXT, icon LONGBLOB, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE currency (id BIGINT AUTO_INCREMENT, global_id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, description TEXT, exchange FLOAT(18, 2) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE periodic_transaction (id BIGINT AUTO_INCREMENT, global_id VARCHAR(255) NOT NULL, account_id BIGINT NOT NULL, currency_id BIGINT NOT NULL, name TEXT, description TEXT, amount FLOAT(18, 2) NOT NULL, date DATETIME NOT NULL, picture LONGBLOB, geo TEXT, periodicity INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX account_id_idx (account_id), INDEX currency_id_idx (currency_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE report (id BIGINT AUTO_INCREMENT, global_id VARCHAR(255) NOT NULL, wallet_id BIGINT NOT NULL, name VARCHAR(255), description TEXT, date_from DATETIME NOT NULL, date_to DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX wallet_id_idx (wallet_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE transaction (id BIGINT AUTO_INCREMENT, global_id VARCHAR(255) NOT NULL, account_id BIGINT NOT NULL, currency_id BIGINT NOT NULL, name VARCHAR(255), description TEXT, amount FLOAT(18, 2) NOT NULL, date DATETIME NOT NULL, latitude FLOAT(18, 2), longitude FLOAT(18, 2), picture LONGBLOB, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX account_id_idx (account_id), INDEX currency_id_idx (currency_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE wallet (id BIGINT AUTO_INCREMENT, global_id VARCHAR(255) NOT NULL, user_id BIGINT NOT NULL, name VARCHAR(255) NOT NULL, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE account ADD CONSTRAINT account_wallet_id_wallet_id FOREIGN KEY (wallet_id) REFERENCES wallet(id) ON DELETE CASCADE;
ALTER TABLE account ADD CONSTRAINT account_account_type_id_account_type_id FOREIGN KEY (account_type_id) REFERENCES account_type(id) ON DELETE CASCADE;
ALTER TABLE periodic_transaction ADD CONSTRAINT periodic_transaction_currency_id_currency_id FOREIGN KEY (currency_id) REFERENCES currency(id) ON DELETE CASCADE;
ALTER TABLE periodic_transaction ADD CONSTRAINT periodic_transaction_account_id_account_id FOREIGN KEY (account_id) REFERENCES account(id) ON DELETE CASCADE;
ALTER TABLE report ADD CONSTRAINT report_wallet_id_wallet_id FOREIGN KEY (wallet_id) REFERENCES wallet(id) ON DELETE CASCADE;
ALTER TABLE transaction ADD CONSTRAINT transaction_currency_id_currency_id FOREIGN KEY (currency_id) REFERENCES currency(id) ON DELETE CASCADE;
ALTER TABLE transaction ADD CONSTRAINT transaction_account_id_account_id FOREIGN KEY (account_id) REFERENCES account(id) ON DELETE CASCADE;
ALTER TABLE wallet ADD CONSTRAINT wallet_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
